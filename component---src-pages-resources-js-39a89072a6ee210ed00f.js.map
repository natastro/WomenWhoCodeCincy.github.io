{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/components/resourceItem.js","webpack:///./src/utils/api.js","webpack:///./src/pages/resources.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ResourceItem","title","description","url","topics","target","rel","href","join","defaultProps","fetchResults","a","fetch","response","ok","json","success","results","statusText","ResourcesPage","state","resourcesList","hasError","errorMessage","componentDidMount","setState","render","className","map","resource","index","short_description","link","Component","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-resources-js-39a89072a6ee210ed00f.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst ResourceItem = ({ title, description, url, topics }) => (\n  <div>\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>{title}</a>\n    <p>{description}</p>\n    <p>{topics.join(\", \")}</p>\n  </div>\n)\n\nResourceItem.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  url: PropTypes.string,\n  topics: PropTypes.arrayOf(PropTypes.string)\n}\n\nResourceItem.defaultProps = {\n  title: ``,\n  description: ``,\n  url: ``,\n  topics: []\n}\n\nexport default ResourceItem\n","export const fetchResults = async (url) => {\n    const response = await fetch(url)\n    //fetch only rejects on network failure or if something prevented the request from completing\n    //so need to check if response.ok is true\n    if (response.ok){\n        return {success: true, results: await response.json()}\n    } else {\n        return {success: false, error: response.statusText}\n    }\n}","import React, { Component } from \"react\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ResourceItem from \"../components/resourceItem\"\nimport {fetchResults} from '../utils/api.js';\n\nclass ResourcesPage extends Component {\n  state = {\n    resourcesList: [],\n    hasError: false,\n    errorMessage: ''\n  }\n  async componentDidMount() {\n    try {\n      const response = await fetchResults('http://my-json-server.typicode.com/WomenWhoCodeCincy/wwcode-cincy-database/learning_resources');\n      if (response.success){\n        this.setState({ resourcesList: response.results, hasError: false});\n      } else {\n        this.setState({hasError: true, errorMessage: response.error});\n      }\n    } catch {\n      this.setState({hasError: true});\n    }\n  }\n\n  render() {\n    const { resourcesList, hasError, errorMessage } = this.state\n    return (\n      <Layout>\n        <SEO title=\"Resources\" />\n        <h1>Resources</h1>\n\n        <p>\n          Check out this list of resources links that were submitted by WWC\n          Cincinnati members.\n        </p>\n        {hasError && !errorMessage && <p>Unable to fetch resources</p>}\n        {hasError && errorMessage && <p>{errorMessage}</p>}\n        <div className=\"resourcesList\">\n          {resourcesList.map((resource, index) => (\n            <ResourceItem\n              key={index}\n              title={resource.title}\n              description={resource.short_description}\n              url={resource.link}\n              topics={resource.topics}\n            />\n          ))}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default ResourcesPage\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}